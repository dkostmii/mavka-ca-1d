взяти математика.отримати_цифри
взяти математика.отримати_значення
взяти математика.отримати_цикл

дія обчислити_стан_клітинки(сусідство список, правило число)
  біти_правила = отримати_цифри(правило, 2, 2 ** сусідство.довжина())
  позиція_сусідства = отримати_значення(сусідство, 2)

  вернути біти_правила[позиція_сусідства]
кінець

дія отримати_сусідство(позиція число, стан список, радіус число або пусто)
  якщо радіус не є пусто
    якщо радіус не є число
      впасти "Очікується, що радіус є число або пусто"
    кінець
  інакше
    радіус = 1
  кінець

  якщо радіус < 1
    впасти "Очікується, що радіус є рівна чи більша 1"
  кінець
  
  результат = []

  перебрати діапазон(позиція - радіус, позиція + радіус + 1) як поз_сусіда
    результат.додати(отримати_цикл(стан, поз_сусіда))
  кінець

  якщо (результат.довжина() != 2 * радіус + 1)
    впасти "Очікується, що довжина результату є 2 * радіус + 1"
  кінець

  вернути результат
кінець

дія обчислити_наступний_стан(попередній_стан список, правило число)
  довжина = попередній_стан.довжина()

  якщо (довжина < 1)
    впасти "Очікується, що довжина стану рівна чи більша 1"
  кінець

  результат = []

  перебрати діапазон(0, попередній_стан.довжина()) як позиція
    сусідство = отримати_сусідство(позиція, попередній_стан)
    результат.додати(обчислити_стан_клітинки(сусідство, правило))
  кінець

  вернути результат
кінець

дія надрукувати_стан(стан список, жива текст або пусто, мертва текст або пусто)
  якщо жива не є пусто
    якщо жива не є текст
      впасти "Очікується, що параметр 'жива' є текст або пусто"
    кінець
  інакше
    жива = "К"
  кінець

  якщо мертва не є пусто
    якщо мертва не є текст
      впасти "Очікується, що параметр 'мертва' є текст або пусто"
    кінець
  інакше
    мертва = "_"
  кінець
  
  якщо (стан.довжина() < 1)
    впасти "Очікується, що довжина стану рівна чи більша 1"
  кінець

  рядок = ""

  перебрати стан як клітинка
    якщо (клітинка більше 0)
      рядок += жива

    інакше
      рядок += мертва
    кінець
  кінець

  друк(рядок)
кінець

дати обчислити_наступний_стан
дати надрукувати_стан
