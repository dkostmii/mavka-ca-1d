дія мод(ділене число, дільник число)
  навпаки = ділене < 0
  результат = 0
  індекс = 0

  якщо (навпаки == так)
    результат = дільник

    поки індекс > ділене
      результат = результат - 1

      якщо (результат < 0)
        результат = дільник - 1
      кінець

      індекс = індекс - 1
    кінець

    вернути результат
  кінець

  поки індекс < ділене
    результат = результат + 1

    якщо (результат > дільник - 1)
      результат = 0
    кінець

    індекс = індекс + 1
  кінець

  вернути результат
кінець

дія перевірити_систему_числення(система_числення число)
  якщо (система_числення == 0 або система_числення == 1)
    впасти "Очікується система числення, відмінна від 0 та 1"
  кінець
кінець

дія отримати_цифри(значення число, система_числення число, стала_ширина число або пусто)
  перевірити_систему_числення(система_числення)

  результат = []
  поточне = значення

  поки поточне не рівно 0
    результат.додати(мод(поточне, система_числення))
    поточне = поточне // система_числення
  кінець

  якщо (стала_ширина не є пусто)
    якщо (стала_ширина не є число)
      впасти "Очікується, що стала ширина є число або пусто"
    кінець

    якщо (результат.довжина() > стала_ширина)
      впасти "Очікується, що значення має менше цифр, ніж стала_ширина"
    кінець

    поки результат.довжина() не рівно стала_ширина
      результат.додати(0)
    кінець
  кінець

  вернути результат.розвернути()
кінець

дія отримати_значення(цифри список, система_числення число)
  перевірити_систему_числення(система_числення)

  результат = 0
  розвернуті_цифри = цифри.розвернути()

  перебрати діапазон(0, розвернуті_цифри.довжина()) як позиція
    цифра = розвернуті_цифри[позиція]

    степінь = система_числення ** позиція

    результат = результат + цифра * степінь
  кінець

  вернути результат
кінець

дія цикл(значення число, мін число, макс число)
  якщо (мін > макс)
    впасти "Очікується, що мін <= макс"
  кінець

  вернути мод(значення, макс - мін + 1) + мін
кінець

дія отримати_цикл(послідовність список, відносна_позиція число)
  позиція = цикл(відносна_позиція, 0, послідовність.довжина() - 1)

  вернути послідовність[позиція]
кінець

дати мод
дати отримати_цифри
дати отримати_значення
дати отримати_цикл
дати цикл
дати отримати_цикл
